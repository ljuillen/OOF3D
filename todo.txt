TODO LIST FOR OOF3D


Before Next Release
-------------------

Optimize categoryVolumes?

Merge branches
  Ryan's 3D widgets  (Needs to be finished for voxel selection)
  Lizhong's solvers.

Use tcmalloc (already in Lizhong's branch?)

Use Eigen?  Use DPF's sparse_matrix_optimization branch?
  On 7/17/17, merged origin/development into
  sparse_matrix_optimization.  The difference in performance on
  solver_test.py/static_quadratic_set was negligible.

Mesh filled contour display not working?

Fix bug: Displaying filtered Skeletons and Meshes leads to errors
like:
Warning: In /Users/langer/UTIL/VTK/VTK-8.1.0.rc2/Common/DataModel/vtkDataSet.cxx, line 476
vtkUnstructuredGrid (0x7fd2d39a6cc0): Cell array  with 1 components, has 1871 tuples but there are only 689 cells

Fix bug: Are element groups/materials not being recomputed for
refinement undo/redo?  Or are filters on the skeleton displays not
updating?
  Use Auto to create element groups.
  Display skeleton edges and materials limited to some groups.
  Undo/Redo refinement
  Elements in other groups appear.
Maybe related to this?
Warning: In /Users/langer/UTIL/VTK/VTK-5.10.1/Filtering/vtkDataSet.cxx, line 446
vtkUnstructuredGrid (0x7f961e6a4280): Cell array  with 1 components,
has 8239 tuples but there are only 1484 cells

Remove opacity param from MicrostructureMaterialDisplay?  Is it used?
It's passed through to vtkActor::GetProperty()->SetOpacity(), but it
doesn't have any effect on what's displayed.


Fix bug?  Edit a clipping plane by double-clicking in the list in the
toolbox, and change the convertible RC to "angles". It's possible to
get the error "Parameter value out of range for phi".

Fix bug: Using upper-right corner arrows for switching views sometimes
draws the canvas in the wrong location.
	    
---------------------------------------------------------------------------
Soon
----

Add a surface-smoothness-energy so surface smoothing works better.

User-settable behavior for mouse buttons, so that more than one mouse
button can be used and it's not necessary to use the
Select/Tumble/Dolly/etc buttons at the top of the canvas.  Also enable
scroll wheels.
  
Reduce memory use by optionally using chars instead of ints for the
voxel category: CMicrostructure::categorymap is Array<char>.   Can
images be stored with fewer bytes?  Make the type of a category be
settable at build time, in case users need more than 256 categories?

Profile VSB construction on a large image with complicated category
structures.  Does it need to be optimized?  See TODO in
CMicrostructure::categorize() wrt not creating the full array of
ProtoVSBNodes.

Write a python build script that doesn't use distutils.
Move swig output to the build directory, and remove SRC/SWIG3D).  The
way it is now, building dist3d after building debug3d fails, because
the swig output files contain code generated from #ifdef DEBUG blocks,
but those output files are in SRC/SWIG3D and aren't rebuilt when the
build options are changed.  Do this in 2D too.

Move output operations to C++.  See TODO in
FilledContourDisplay.setData in engine/IO/contourdisplay.py.

Write CSkeletonFace::homogeneity()

Allow graphics windows to be synched, so that view changes in one are
done in all.

Tumbling large images or Microstruture Material displays can be very
slow because it takes a long time to recompute the center point.
Either find a faster way to compute the center, or make computing the
center optional and re-use the old point.

----------------------------------------------------------------------------
At Some Later Time
------------------

Parallelize categoryVolumes.

Migrate to Python 3.x

Convert pixel category array to octree, and construct voxel set
boundaries from the octree, or compute element homogeneity from octree
elements instead of voxels.  Maybe.



BUGS TO FIX

Display a contour plot.  Set contour display's filter to "Selected".
Select a (skeleton) element.  Crash!  Selecting an element before
setting the filter doesn't crash.
 The problem is that selecting the element changes the filter's
 output, but doesn't change the filter parameter of the
 FilledContourDisplay, so FilledContourDisplay.setData isn't called.


Contour displays are incorrect when the elements are filtered.
  Same problem as above, probably.


-------------------------------------------------------------------------
-------------------------------------------------------------------------

FIXED

Fix bug:  open two graphics windows on Linux.  Close the first one with the
window manager close button.  The program will crash.
Changes that prevent crashing:
   Comment out call to Render
   Run on Mac with Cocoa
Changes that don't prevent crashing:
   Don't add renderer to render_window.
   Remove renderer from render_window at start of destroyCB.
   Toolboxes aren't removed in GfxWindowBase.destroyCB.
   No layers created (immediate return in createPredefinedLayers,
      don't create axes)
   Switch to vtk8. -- Crashes when closing just 1 graphics window, using
     either the menu item (seg fault) or the window manager (X11 error),
     even when Render call is commented out.
     * Seg fault is in
       PlaneAndArrowLayer::destroy->OOFCanvasLayer::removeAllProps. When
       no layers are defined, closing with either the menu item or the
       window manager leads to the X11 error, so there may be two
       separate problems.  Fixed that... Now there's an x11 error in both cases.
** Fixed 2017-12-05


Upgrade VTK
** Finished(?) 2017-12-05

Fix this TODO in ghostgfxwindow.py: After cloning a window containing
only a hidden image layer and showing the layer in the clone, the
image is drawn at the wrong size and with a black border. Making any
change to the view fixes it.
** Can't reproduce with vtk 7.1.1, 2017-12-06

Mesh Material display not working?
** Fixed 2017-12-06  CellData wasn't being included in MeshGridSource::GetGrid

