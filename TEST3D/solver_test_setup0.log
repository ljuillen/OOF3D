OOF.File.LoadStartUp.Data(filename='materials_for_solver_test')
OOF.Microstructure.Create_From_ImageFile(filenames=ThreeDImagePattern(directory='/Users/langer/FE/OOF3D/TEST3D/ms_data/5color/',pattern='slice(0|([1-9][0-9]*))\\.png',sort=NumericalOrder()), microstructure_name='solve_test', height=10.0, width=automatic, depth=automatic)
OOF.Windows.Graphics.New()
OOF.Image.AutoGroup(image='solve_test:5color', name_template='%c')
OOF.Material.Assign(material='bricks', microstructure='solve_test', pixels=every)
OOF.Material.Assign(material='mortar', microstructure='solve_test', pixels='#fefefe')
OOF.Graphics_1.Toolbox.Voxel_Info.Query(point=Point(3.94308,4.96225,21.2376), view=View(cameraPosition=Coord(5,5,34.2583), focalPoint=Coord(5,5,5), up=Coord(0,1,0), angle=30, clipPlanes=[], invertClip=0, size_x=622, size_y=647))
OOF.Graphics_1.Toolbox.Voxel_Info.Query(point=Point(3.83524,5.82504,21.2376), view=View(cameraPosition=Coord(5,5,34.2583), focalPoint=Coord(5,5,5), up=Coord(0,1,0), angle=30, clipPlanes=[], invertClip=0, size_x=622, size_y=647))
OOF.File.Save.Microstructure(filename='/Users/langer/FE/OOF3D/TEST3D/ms_data/5color/solver_test_micro.dat', mode='w', format='ascii', microstructure='solve_test')
OOF.Skeleton.New(name='skeleton', microstructure='solve_test', x_elements=4, y_elements=4, z_elements=4, skeleton_geometry=TetraSkeleton(arrangement='moderate'))
OOF.Skeleton.Modify(skeleton='solve_test:skeleton', modifier=Refine(targets=CheckHomogeneity(threshold=0.9),criterion=Unconditionally(),alpha=0.3))
OOF.Graphics_1.Settings.Camera.View(view=View(cameraPosition=Coord(-18.3217,9.09162,22.1874), focalPoint=Coord(5,5,5), up=Coord(0.0374195,0.982384,-0.183091), angle=30, clipPlanes=[], invertClip=0, size_x=622, size_y=647))
OOF.Skeleton.Modify(skeleton='solve_test:skeleton', modifier=SnapRefine(targets=CheckHomogeneity(threshold=0.9),criterion=Unconditionally(),min_distance=0.309,alpha=0.3))
OOF.Skeleton.Modify(skeleton='solve_test:skeleton', modifier=Rationalize(targets=AllElements(),criterion=AverageEnergy(alpha=0.3),method=SpecificRationalization(rationalizers=[RemoveBadTetrahedra(acute_angle=15,obtuse_angle=150)])))
OOF.Graphics_1.Layer.Hide(n=0)
OOF.Graphics_1.Layer.Select(n=0)
OOF.Graphics_1.Layer.Select(n=4)
OOF.Graphics_1.Layer.Edit(n=4, category='Skeleton', what='solve_test:skeleton', how=SkeletonEdgeDisplay(color=Gray(value=0.0),width=1,filter=MaterialFilter(material='mortar')))
OOF.Graphics_1.Settings.Camera.View(view=View(cameraPosition=Coord(4.8446,0.144618,33.8522), focalPoint=Coord(5,5,5), up=Coord(0.968958,0.242889,0.0460934), angle=30, clipPlanes=[], invertClip=0, size_x=622, size_y=579))
OOF.Skeleton.Undo(skeleton='solve_test:skeleton')
OOF.Skeleton.Undo(skeleton='solve_test:skeleton')
OOF.Skeleton.Modify(skeleton='solve_test:skeleton', modifier=Refine(targets=CheckHomogeneity(threshold=0.9),criterion=Unconditionally(),alpha=0.3))
OOF.Graphics_1.Settings.Camera.View(view=View(cameraPosition=Coord(-19.1858,-3.64345,-9.01381), focalPoint=Coord(5,5,5), up=Coord(0.258324,-0.955354,0.143414), angle=30, clipPlanes=[], invertClip=0, size_x=622, size_y=579))
OOF.Graphics_1.Layer.Edit(n=4, category='Skeleton', what='solve_test:skeleton', how=SkeletonEdgeDisplay(color=Gray(value=0.0),width=1,filter=MaterialFilter(material='bricks')))
OOF.Graphics_1.Layer.Select(n=0)
OOF.Graphics_1.Layer.Show(n=0)
OOF.Graphics_1.Layer.Edit(n=0, category='Image', what='solve_test:5color', how=BitmapDisplayMethod(filter=VoxelMaterialFilter(material='mortar')))
OOF.Graphics_1.Settings.Camera.View(view=View(cameraPosition=Coord(4.96954,34.2573,5.2459), focalPoint=Coord(5,5,5), up=Coord(0.998461,0.00150555,-0.0554439), angle=30, clipPlanes=[], invertClip=0, size_x=622, size_y=579))
OOF.Skeleton.Modify(skeleton='solve_test:skeleton', modifier=SnapRefine(targets=CheckHomogeneity(threshold=0.9),criterion=Unconditionally(),min_distance=0.309,alpha=0.3))
OOF.Graphics_1.Layer.Hide(n=0)
OOF.Graphics_1.Layer.Select(n=4)
OOF.Graphics_1.Layer.Edit(n=4, category='Skeleton', what='solve_test:skeleton', how=SkeletonEdgeDisplay(color=Gray(value=0.0),width=1,filter=MaterialFilter(material='mortar')))
OOF.Graphics_1.Settings.Camera.View(view=View(cameraPosition=Coord(27.2139,-11.3355,14.785), focalPoint=Coord(5,5,5), up=Coord(-0.628654,-0.762109,0.154869), angle=30, clipPlanes=[], invertClip=0, size_x=622, size_y=579))
OOF.Skeleton.Undo(skeleton='solve_test:skeleton')
OOF.Skeleton.Undo(skeleton='solve_test:skeleton')
OOF.Skeleton.Undo(skeleton='solve_test:skeleton')
OOF.Skeleton.Redo(skeleton='solve_test:skeleton')
OOF.Skeleton.Modify(skeleton='solve_test:skeleton', modifier=SnapRefine(targets=CheckHomogeneity(threshold=0.9),criterion=Unconditionally(),min_distance=0.309,alpha=0.761538))
OOF.Skeleton.Modify(skeleton='solve_test:skeleton', modifier=Rationalize(targets=AllElements(),criterion=AverageEnergy(alpha=0.3),method=SpecificRationalization(rationalizers=[RemoveBadTetrahedra(acute_angle=15,obtuse_angle=138)])))
OOF.Skeleton.PinNodes.Pin_Internal_Boundary_Nodes(skeleton='solve_test:skeleton')
OOF.Graphics_1.Settings.Camera.View(view=View(cameraPosition=Coord(-13.6916,-1.61765,-16.5147), focalPoint=Coord(5,5,5), up=Coord(0.185368,-0.972901,0.138208), angle=30, clipPlanes=[], invertClip=0, size_x=622, size_y=579))
OOF.Graphics_1.Layer.Hide(n=4)
OOF.Graphics_1.Layer.Show(n=4)
OOF.Graphics_1.Layer.Edit(n=4, category='Skeleton', what='solve_test:skeleton', how=SkeletonEdgeDisplay(color=Gray(value=0.0),width=1,filter=NullFilter()))
OOF.Skeleton.Modify(skeleton='solve_test:skeleton', modifier=Smooth(targets=AllNodes(),criterion=AverageEnergy(alpha=0.3),T=0.0,iteration=FixedIteration(iterations=5)))
OOF.Graphics_1.Layer.Show(n=0)
OOF.Graphics_1.Layer.Select(n=0)
OOF.Graphics_1.Settings.Camera.View(view=View(cameraPosition=Coord(-1.93823,33.4019,6.11495), focalPoint=Coord(5,5,5), up=Coord(0.260991,0.0258748,0.964994), angle=30, clipPlanes=[], invertClip=0, size_x=622, size_y=579))
OOF.File.Save.Skeleton(filename='/Users/langer/FE/OOF3D/TEST3D/ms_data/5color/solver_test_skel.dat', mode='w', format='ascii', skeleton='solve_test:skeleton')
OOF.Mesh.New(name='mesh', skeleton='solve_test:skeleton', element_types=['T4_4'])
OOF.Subproblem.Field.Define(subproblem='solve_test:skeleton:mesh:default', field=Displacement)
OOF.Subproblem.Field.Activate(subproblem='solve_test:skeleton:mesh:default', field=Displacement)
OOF.Subproblem.Equation.Activate(subproblem='solve_test:skeleton:mesh:default', equation=Force_Balance)
OOF.Graphics_1.Toolbox.Viewer.Restore_Named_View(view='Front')
OOF.Graphics_1.Settings.Camera.View(view=View(cameraPosition=Coord(5,5,34.2583), focalPoint=Coord(5,5,5), up=Coord(0,1,0), angle=30, clipPlanes=[], invertClip=0, size_x=622, size_y=579))
OOF.Graphics_1.Settings.Camera.View(view=View(cameraPosition=Coord(-6.30322,17.5941,28.8679), focalPoint=Coord(5,5,5), up=Coord(0.115699,0.900057,-0.420131), angle=30, clipPlanes=[], invertClip=0, size_x=622, size_y=579))
OOF.Mesh.Boundary_Conditions.New(name='bc', mesh='solve_test:skeleton:mesh', condition=DirichletBC(field=Displacement,field_component='x',equation=Force_Balance,eqn_component='x',profile=ConstantProfile(value=0.0),boundary='bottom'))
OOF.Mesh.Boundary_Conditions.New(name='bc<2>', mesh='solve_test:skeleton:mesh', condition=DirichletBC(field=Displacement,field_component='x',equation=Force_Balance,eqn_component='x',profile=ConstantProfile(value=1),boundary='top'))
OOF.Mesh.Boundary_Conditions.Edit(name='bc<2>', mesh='solve_test:skeleton:mesh', condition=DirichletBC(field=Displacement,field_component='y',equation=Force_Balance,eqn_component='y',profile=ConstantProfile(value=0),boundary='bottom'))
OOF.Mesh.Boundary_Conditions.Edit(name='bc', mesh='solve_test:skeleton:mesh', condition=DirichletBC(field=Displacement,field_component='x',equation=Force_Balance,eqn_component='x',profile=ConstantProfile(value=0.0),boundary='bottom'))
OOF.Mesh.Boundary_Conditions.New(name='bc<3>', mesh='solve_test:skeleton:mesh', condition=DirichletBC(field=Displacement,field_component='z',equation=Force_Balance,eqn_component='z',profile=ConstantProfile(value=0),boundary='bottom'))
OOF.Mesh.Boundary_Conditions.New(name='bc<4>', mesh='solve_test:skeleton:mesh', condition=DirichletBC(field=Displacement,field_component='x',equation=Force_Balance,eqn_component='x',profile=ConstantProfile(value=0),boundary='top'))
OOF.Mesh.Boundary_Conditions.New(name='bc<5>', mesh='solve_test:skeleton:mesh', condition=DirichletBC(field=Displacement,field_component='y',equation=Force_Balance,eqn_component='y',profile=ConstantProfile(value=0),boundary='top'))
OOF.Mesh.Boundary_Conditions.New(name='bc<6>', mesh='solve_test:skeleton:mesh', condition=DirichletBC(field=Displacement,field_component='z',equation=Force_Balance,eqn_component='z',profile=ConstantProfile(value=1),boundary='top'))
OOF.Graphics_1.Settings.Camera.View(view=View(cameraPosition=Coord(-24.0613,2.29149,2.96227), focalPoint=Coord(5,5,5), up=Coord(0.0528878,0.172526,-0.983584), angle=30, clipPlanes=[], invertClip=0, size_x=622, size_y=579))
OOF.Graphics_1.Settings.Camera.View(view=View(cameraPosition=Coord(-17.6526,3.22292,23.4324), focalPoint=Coord(5,5,5), up=Coord(-0.0542314,0.99809,0.0295787), angle=30, clipPlanes=[], invertClip=0, size_x=622, size_y=579))
OOF.Graphics_1.Toolbox.Viewer.Restore_Named_View(view='Front')
OOF.Graphics_1.Settings.Camera.View(view=View(cameraPosition=Coord(28.9165,12.9363,19.8683), focalPoint=Coord(5,5,5), up=Coord(-0.395995,0.905288,0.153761), angle=30, clipPlanes=[], invertClip=0, size_x=622, size_y=579))
OOF.Graphics_1.Toolbox.Viewer.Restore_Named_View(view='Front')
OOF.Graphics_1.Settings.Camera.View(view=View(cameraPosition=Coord(15.8422,11.9127,31.2814), focalPoint=Coord(5,5,5), up=Coord(-0.049611,0.97076,-0.234871), angle=30, clipPlanes=[], invertClip=0, size_x=622, size_y=579))
OOF.Mesh.Boundary_Conditions.New(name='bc<7>', mesh='solve_test:skeleton:mesh', condition=DirichletBC(field=Displacement,field_component='z',equation=Force_Balance,eqn_component='z',profile=ConstantProfile(value=0),boundary='front'))
OOF.Mesh.Boundary_Conditions.New(name='bc<8>', mesh='solve_test:skeleton:mesh', condition=DirichletBC(field=Displacement,field_component='z',equation=Force_Balance,eqn_component='z',profile=ConstantProfile(value=0),boundary='back'))
OOF.Mesh.Boundary_Conditions.New(name='bc<9>', mesh='solve_test:skeleton:mesh', condition=DirichletBC(field=Displacement,field_component='y',equation=Force_Balance,eqn_component='y',profile=ConstantProfile(value=0),boundary='back'))
OOF.Mesh.Boundary_Conditions.New(name='bc<10>', mesh='solve_test:skeleton:mesh', condition=DirichletBC(field=Displacement,field_component='y',equation=Force_Balance,eqn_component='y',profile=ConstantProfile(value=0),boundary='front'))
OOF.Mesh.Boundary_Conditions.New(name='bc<11>', mesh='solve_test:skeleton:mesh', condition=DirichletBC(field=Displacement,field_component='x',equation=Force_Balance,eqn_component='x',profile=ConstantProfile(value=0),boundary='left'))
OOF.Mesh.Boundary_Conditions.New(name='bc<12>', mesh='solve_test:skeleton:mesh', condition=DirichletBC(field=Displacement,field_component='x',equation=Force_Balance,eqn_component='x',profile=ConstantProfile(value=0),boundary='right'))
OOF.Mesh.Boundary_Conditions.New(name='bc<13>', mesh='solve_test:skeleton:mesh', condition=DirichletBC(field=Displacement,field_component='y',equation=Force_Balance,eqn_component='y',profile=ConstantProfile(value=0),boundary='right'))
OOF.Mesh.Boundary_Conditions.New(name='bc<14>', mesh='solve_test:skeleton:mesh', condition=DirichletBC(field=Displacement,field_component='y',equation=Force_Balance,eqn_component='y',profile=ConstantProfile(value=0),boundary='left'))
OOF.File.Save.Mesh(filename='/Users/langer/FE/OOF3D/TEST3D/ms_data/5color/solver_test_mesh.dat', mode='w', format='ascii', mesh='solve_test:skeleton:mesh')
OOF.Subproblem.Set_Solver(subproblem='solve_test:skeleton:mesh:default', solver_mode=BasicSolverMode(time_stepper=BasicStaticDriver(),matrix_method=BasicIterative(tolerance=1e-13,max_iterations=1000)))
OOF.Mesh.Solve(mesh='solve_test:skeleton:mesh', endtime=0.0)
