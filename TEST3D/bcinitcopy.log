# OOF version (unreleased)
OOF.Microstructure.New(name='microstructure', width=1.0, height=1.0, depth=1.0, width_in_pixels=10, height_in_pixels=10, depth_in_pixels=10)
OOF.Material.New(name='material', material_type='bulk')
OOF.Material.Assign(material='material', microstructure='microstructure', pixels=every)
OOF.Material.Add_property(name='material', property='Mechanical:Elasticity:Isotropic')
OOF.Skeleton.New(name='skeleton', microstructure='microstructure', x_elements=4, y_elements=4, z_elements=4, skeleton_geometry=TetraSkeleton(arrangement='moderate'))
OOF.Mesh.New(name='mesh', skeleton='microstructure:skeleton', element_types=['TET4_4', 'Q4_4', 'T3_3', 'D2_2'])
OOF.Subproblem.Field.Define(subproblem='microstructure:skeleton:mesh:default', field=Displacement)
OOF.Subproblem.Field.Activate(subproblem='microstructure:skeleton:mesh:default', field=Displacement)
OOF.Subproblem.Equation.Activate(subproblem='microstructure:skeleton:mesh:default', equation=Force_Balance)
OOF.Mesh.Boundary_Conditions.New(name='bc', mesh='microstructure:skeleton:mesh', condition=FloatBC(field=Displacement,field_component='x',equation=Force_Balance,eqn_component='x',profile=ConstantProfile(value=0.0),boundary='Xmax'))
OOF.Mesh.Boundary_Conditions.Set_BC_Initializer(mesh='microstructure:skeleton:mesh', bc='bc', initializer=FloatBCInitMin(value=2))
OOF.Mesh.New(name='mesh<2>', skeleton='microstructure:skeleton', element_types=['TET4_4', 'Q4_4', 'T3_3', 'D2_2'])
OOF.Subproblem.Field.Define(subproblem='microstructure:skeleton:mesh<2>:default', field=Displacement)
OOF.Subproblem.Field.Activate(subproblem='microstructure:skeleton:mesh<2>:default', field=Displacement)
OOF.Subproblem.Equation.Activate(subproblem='microstructure:skeleton:mesh<2>:default', equation=Force_Balance)
OOF.Mesh.Boundary_Conditions.Copy(current='microstructure:skeleton:mesh', mesh='microstructure:skeleton:mesh<2>', bc='bc', name='bc', boundary='Xmax')
OOF.Mesh.Copy_Field_Initializers(source='microstructure:skeleton:mesh', target='microstructure:skeleton:mesh<2>')
