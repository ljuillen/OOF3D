OOF.Settings.Random_Seed(seed=17)
OOF.Microstructure.Create_From_ImageFile(filenames=ThreeDImageDirectory(directory='/Users/langer/FE/OOF3D-merge/TEST3D/ms_data/bluegreen',sort=NumericalOrder()), microstructure_name='meshtest', height=automatic, width=automatic, depth=automatic)
OOF.Image.AutoGroup(image='meshtest:bluegreen', name_template='%c')
OOF.Skeleton.New(name='skeleton', microstructure='meshtest', x_elements=4, y_elements=4, z_elements=4, skeleton_geometry=TetraSkeleton(arrangement='moderate'))
OOF.Windows.Graphics.New()                           
OOF.Mesh.New(name='fe_test', skeleton='meshtest:skeleton', element_types=['T4_4'])
OOF.Mesh.Rename(mesh='meshtest:skeleton:fe_test', name='save_test')
OOF.Subproblem.Field.Define(subproblem='meshtest:skeleton:save_test:default', field=Temperature)
OOF.Subproblem.Field.Define(subproblem='meshtest:skeleton:save_test:default', field=Displacement)
OOF.Mesh.Set_Field_Initializer(mesh='meshtest:skeleton:save_test', field=Displacement, initializer=ConstThreeVectorFieldInit(cx=1,cy=2,cz=3))
OOF.Mesh.Set_Field_Initializer(mesh='meshtest:skeleton:save_test', field=Temperature, initializer=FuncScalarFieldInit(function='sin(x)'))
OOF.Mesh.Apply_Field_Initializers(mesh='meshtest:skeleton:save_test')
OOF.Mesh.Field.Activate(mesh='meshtest:skeleton:save_test', field=Temperature)
OOF.Mesh.Equation.Activate(mesh='meshtest:skeleton:save_test', equation=Heat_Eqn)
OOF.Mesh.Equation.Activate(mesh='meshtest:skeleton:save_test', equation=Force_Balance)
OOF.Mesh.Boundary_Conditions.New(name='high', mesh='meshtest:skeleton:save_test', condition=DirichletBC(field=Temperature,field_component='',equation=Heat_Eqn,eqn_component='',profile=ConstantProfile(value=1.0),boundary='top'))
OOF.Mesh.Boundary_Conditions.New(name='low', mesh='meshtest:skeleton:save_test', condition=DirichletBC(field=Temperature,field_component='',equation=Heat_Eqn,eqn_component='',profile=ConstantProfile(value=0.0),boundary='bottom'))
OOF.Mesh.Boundary_Conditions.New(name='floatdisp', mesh='meshtest:skeleton:save_test', condition=FloatBC(field=Displacement,field_component='x',equation=Force_Balance,eqn_component='x',profile=ConstantProfile(value=0.0),boundary='top'))
OOF.Mesh.Boundary_Conditions.New(name='floattemp', mesh='meshtest:skeleton:save_test', condition=FloatBC(field=Temperature,field_component='x',equation=Heat_Eqn,eqn_component='x',profile=ConstantProfile(value=0.0),boundary='left'))
OOF.Subproblem.Set_Solver( subproblem='meshtest:skeleton:save_test:default', linearity=Linear(), solver=StaticDriver( matrixmethod=BiConjugateGradient( preconditioner=ILUPreconditioner(), tolerance=-1.23e-13,max_iterations=1234))) 
#OOF.Mesh.Boundary_Conditions.Set_BC_Initializer(mesh='meshtest:skeleton:save_test', bc='floatdisp', initializer=FloatBCInitMin_td(value=0.2,time_derivative=0.1))
#OOF.Mesh.Boundary_Conditions.Set_BC_Initializer(mesh='meshtest:skeleton:save_test', bc='floattemp', initializer=FloatBCInitMin(value=0.3))
OOF.File.Save.Mesh(filename='mesh_save_test', mode='w', format='ascii', mesh='meshtest:skeleton:save_test')

