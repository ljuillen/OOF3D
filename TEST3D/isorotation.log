OOF.Microstructure.New(name='microstructure', width=1.0, height=1.0, depth=1.0, width_in_pixels=10, height_in_pixels=10, depth_in_pixels=10)
OOF.Material.New(name='materialx', material_type='bulk')
OOF.Property.Copy(property='Orientation', new_name='flexible')
OOF.Property.Parametrize.Orientation.flexible(angles=Abg(alpha=0,beta=30,gamma=0))
OOF.Material.Add_property(name='materialx', property='Orientation:flexible')
OOF.Property.Copy(property='Thermal:Conductivity:Anisotropic:Monoclinic', new_name='mono')
OOF.Property.Parametrize.Thermal.Conductivity.Anisotropic.Monoclinic.mono(kappa=MonoclinicRank2Tensor(xx=10.0, yy=1.0, zz=1.0, xz=0.5))
OOF.Material.Add_property(name='materialx', property='Thermal:Conductivity:Anisotropic:Monoclinic:mono')
OOF.Material.Assign(material='materialx', microstructure='microstructure', pixels=every)
OOF.Skeleton.New(name='skeleton', microstructure='microstructure', x_elements=6, y_elements=6, z_elements=6, skeleton_geometry=TetraSkeleton(arrangement='moderate'))
OOF.Mesh.New(name='mesh', skeleton='microstructure:skeleton', element_types=['T4_4'])
OOF.Subproblem.Field.Define(subproblem='microstructure:skeleton:mesh:default', field=Temperature)
OOF.Subproblem.Field.Activate(subproblem='microstructure:skeleton:mesh:default', field=Temperature)
OOF.Subproblem.Equation.Activate(subproblem='microstructure:skeleton:mesh:default', equation=Heat_Eqn)
OOF.Mesh.Boundary_Conditions.New(name='bc', mesh='microstructure:skeleton:mesh', condition=DirichletBC(field=Temperature,field_component='',equation=Heat_Eqn,eqn_component='',profile=ConstantProfile(value=0.0),boundary='XminYminZmax'))
OOF.Mesh.Boundary_Conditions.New(name='bc<2>', mesh='microstructure:skeleton:mesh', condition=DirichletBC(field=Temperature,field_component='',equation=Heat_Eqn,eqn_component='',profile=ConstantProfile(value=1),boundary='XmaxYmaxZmin'))
OOF.Subproblem.Set_Solver(subproblem='microstructure:skeleton:mesh:default', solver_mode=BasicSolverMode(time_stepper=BasicStaticDriver(),matrix_method=BasicIterative(tolerance=1e-13,max_iterations=1000)))
OOF.Mesh.Solve(mesh='microstructure:skeleton:mesh', endtime=0.0)
