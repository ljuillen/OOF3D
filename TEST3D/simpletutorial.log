# OOF version (unreleased)
OOF.Windows.Graphics.New()
OOF.Microstructure.Create_From_ImageFile(filenames=ThreeDImageDirectory(directory='/Users/langer/FE/OOF3D/examples/cyallow',sort=NumericalOrder()), microstructure_name='cyallow', height=automatic, width=automatic, depth=automatic)
OOF.Image.AutoGroup(image='cyallow:cyallow', name_template='%c')
OOF.PixelGroup.Rename(microstructure='cyallow', group='#ffff00', new_name='yellow')
OOF.PixelGroup.Rename(microstructure='cyallow', group='#00ffff', new_name='cyan')
OOF.Material.New(name='yellow-material', material_type='bulk')
OOF.Material.New(name='cyan-material', material_type='bulk')
OOF.Property.Copy(property='Mechanical:Elasticity:Isotropic', new_name='yellow_elasticity')
OOF.Property.Parametrize.Mechanical.Elasticity.Isotropic.yellow_elasticity(cijkl=IsotropicRank4TensorEnu(young=1,poisson=0.3))
OOF.Material.Add_property(name='yellow-material', property='Mechanical:Elasticity:Isotropic:yellow_elasticity')
OOF.Property.Copy(property='Mechanical:Elasticity:Isotropic', new_name='cyan_elasticity')
OOF.Property.Parametrize.Mechanical.Elasticity.Isotropic.cyan_elasticity(cijkl=IsotropicRank4TensorEnu(young=0.5,poisson=0.3))
OOF.Material.Add_property(name='cyan-material', property='Mechanical:Elasticity:Isotropic:cyan_elasticity')
OOF.Property.Copy(property='Color', new_name='yellow')
OOF.Material.Add_property(name='yellow-material', property='Color:yellow')
OOF.Property.Parametrize.Color.yellow(color=RGBColor(red=1.00000,green=0.85714,blue=0.00000))
OOF.Property.Copy(property='Color:yellow', new_name='blue')
OOF.Property.Parametrize.Color.blue(color=RGBColor(red=0.00000,green=0.85714,blue=1.00000))
OOF.Material.Add_property(name='cyan-material', property='Color:blue')
OOF.Material.Assign(material='yellow-material', microstructure='cyallow', pixels='yellow')
OOF.Graphics_1.Layer.New(category='Microstructure', what='cyallow', how=MicrostructureMaterialDisplay(no_material=Gray(value=0.0),no_color=RGBColor(red=0.00000,green=0.00000,blue=1.00000),filter=AllVoxels()))
OOF.Graphics_1.Layer.Hide(n=1)
OOF.Graphics_1.Layer.Hide(n=0)
OOF.Graphics_1.Layer.Select(n=0)
OOF.Graphics_1.Layer.Show(n=1)
OOF.Graphics_1.Layer.Select(n=1)
OOF.Graphics_1.Layer.Show(n=0)
OOF.Graphics_1.Layer.Select(n=0)
OOF.Graphics_1.Layer.Hide(n=1)
OOF.Graphics_1.Layer.Select(n=1)
OOF.Graphics_1.Layer.Show(n=1)
OOF.Material.Assign(material='cyan-material', microstructure='cyallow', pixels='cyan')
OOF.Skeleton.New(name='skeleton', microstructure='cyallow', x_elements=4, y_elements=4, z_elements=4, skeleton_geometry=TetraSkeleton(arrangement='moderate'))
OOF.Skeleton.Modify(skeleton='cyallow:skeleton', modifier=SnapNodes(targets=SnapAll(),criterion=AverageEnergy(alpha=1)))
OOF.Skeleton.Undo(skeleton='cyallow:skeleton')
OOF.Skeleton.Modify(skeleton='cyallow:skeleton', modifier=SnapNodes(targets=SnapAll(),criterion=AverageEnergy(alpha=1)))
OOF.Skeleton.Modify(skeleton='cyallow:skeleton', modifier=SnapNodes(targets=SnapAll(),criterion=AverageEnergy(alpha=1)))
OOF.Skeleton.Undo(skeleton='cyallow:skeleton')
OOF.Skeleton.Undo(skeleton='cyallow:skeleton')
OOF.Skeleton.Modify(skeleton='cyallow:skeleton', modifier=SnapNodes(targets=SnapAll(),criterion=AverageEnergy(alpha=1)))
OOF.Skeleton.Modify(skeleton='cyallow:skeleton', modifier=SnapNodes(targets=SnapAll(),criterion=AverageEnergy(alpha=1)))
OOF.Graphics_1.Layer.Hide(n=1)
OOF.Graphics_1.Layer.Hide(n=0)
OOF.Graphics_1.Layer.Select(n=0)
OOF.Graphics_1.Settings.Camera.View(view=View(cameraPosition=Coord(48.9567,142.856,127.608), focalPoint=Coord(30,30,15), up=Coord(-0.438079,0.67075,-0.598482), angle=30, clipPlanes=[], invertClip=0, suppressClip=0, size_x=621, size_y=615))
OOF.Graphics_1.Toolbox.Viewer.Restore_View(view=View(cameraPosition=Coord(30,30,175.55), focalPoint=Coord(30,30,15), up=Coord(0,1,0), angle=30, clipPlanes=[], invertClip=0, suppressClip=0, size_x=621, size_y=615))
OOF.Graphics_1.Toolbox.Viewer.Restore_View(view=View(cameraPosition=Coord(48.9567,142.856,127.608), focalPoint=Coord(30,30,15), up=Coord(-0.438079,0.67075,-0.598482), angle=30, clipPlanes=[], invertClip=0, suppressClip=0, size_x=621, size_y=615))
OOF.Graphics_1.Layer.Select(n=5)
OOF.Graphics_1.Layer.Edit(n=5, category='Skeleton', what='cyallow:skeleton', how=SkeletonEdgeDisplay(color=Gray(value=0.0),width=1,filter=MaterialFilter(material='cyan-material')))
OOF.Graphics_1.Settings.Camera.View(view=View(cameraPosition=Coord(61.6888,-2.33715,169.034), focalPoint=Coord(30,30,15), up=Coord(-0.0392624,0.976257,0.213028), angle=30, clipPlanes=[], invertClip=0, suppressClip=0, size_x=621, size_y=615))
OOF.Graphics_1.Layer.New(category='Skeleton', what='cyallow:skeleton', how=SkeletonMaterialDisplay(no_material=Gray(value=0.0),no_color=RGBColor(red=0.00000,green=0.00000,blue=1.00000),filter=MaterialFilter(material='cyan-material')))
OOF.Mesh.New(name='mesh', skeleton='cyallow:skeleton', element_types=['TET4_4', 'Q4_4', 'T3_3', 'D2_2'])
OOF.Graphics_1.Layer.Hide(n=6)
OOF.Graphics_1.Layer.Select(n=6)
OOF.Graphics_1.Layer.Delete(n=6)
OOF.Graphics_1.Layer.Hide(n=2)
OOF.Graphics_1.Layer.Select(n=2)
OOF.Graphics_1.Layer.Delete(n=2)
OOF.Subproblem.Field.Define(subproblem='cyallow:skeleton:mesh:default', field=Displacement)
OOF.Subproblem.Field.Activate(subproblem='cyallow:skeleton:mesh:default', field=Displacement)
OOF.Subproblem.Equation.Activate(subproblem='cyallow:skeleton:mesh:default', equation=Force_Balance)
OOF.Mesh.Boundary_Conditions.New(name='bc', mesh='cyallow:skeleton:mesh', condition=DirichletBC(field=Displacement,field_component='x',equation=Force_Balance,eqn_component='x',profile=ConstantProfile(value=0.0),boundary='Xmin'))
OOF.Mesh.Boundary_Conditions.New(name='bc<2>', mesh='cyallow:skeleton:mesh', condition=DirichletBC(field=Displacement,field_component='y',equation=Force_Balance,eqn_component='y',profile=ConstantProfile(value=0.0),boundary='Ymin'))
OOF.Mesh.Boundary_Conditions.New(name='bc<3>', mesh='cyallow:skeleton:mesh', condition=DirichletBC(field=Displacement,field_component='y',equation=Force_Balance,eqn_component='y',profile=ConstantProfile(value=10),boundary='Ymax'))
OOF.Mesh.Boundary_Conditions.New(name='bc<4>', mesh='cyallow:skeleton:mesh', condition=DirichletBC(field=Displacement,field_component='z',equation=Force_Balance,eqn_component='z',profile=ConstantProfile(value=10.0),boundary='XminYminZmin'))
OOF.Subproblem.Set_Solver(subproblem='cyallow:skeleton:mesh:default', solver_mode=BasicSolverMode(time_stepper=BasicStaticDriver(),matrix_method=BasicIterative(tolerance=1e-13,max_iterations=1000)))
OOF.Mesh.Solve(mesh='cyallow:skeleton:mesh', endtime=0.0)
OOF.Graphics_1.Layer.Select(n=5)
OOF.Graphics_1.Layer.Edit(n=5, category='Mesh', what='cyallow:skeleton:mesh', how=FilledContourDisplay(when=latest,what=getOutput('Field:Component',component='y',field=Displacement),where=Actual(),min_contour=automatic,max_contour=automatic,filter=NullFilter(),levels=11,nbins=5,colormap=ThermalMap()))
