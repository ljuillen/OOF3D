OOF.Microstructure.New(name='microstructure', width=1.0, height=1.0, depth=1.0, width_in_pixels=10, height_in_pixels=10, depth_in_pixels=10)
OOF.Material.New(name='material', material_type='bulk')
OOF.Property.Parametrize.Mechanical.Elasticity.Isotropic(cijkl=IsotropicRank4TensorEnu(young=0.6666666666666666,poisson=0.0))
OOF.Material.Add_property(name='material', property='Mechanical:Elasticity:Isotropic')
OOF.Property.Parametrize.Mechanical.MassDensity.ConstantMassDensity(rho=1.0)
OOF.Material.Add_property(name='material', property='Mechanical:MassDensity:ConstantMassDensity')
OOF.Property.Parametrize.Thermal.Conductivity.Isotropic(kappa=1.0)
OOF.Material.Add_property(name='material', property='Thermal:Conductivity:Isotropic')
OOF.Property.Parametrize.Thermal.HeatCapacity.ConstantHeatCapacity(cv=1.0)
OOF.Material.Add_property(name='material', property='Thermal:HeatCapacity:ConstantHeatCapacity')
OOF.Material.Assign(material='material', microstructure='microstructure', pixels=every)
OOF.Skeleton.New(name='skeleton', microstructure='microstructure', x_elements=4, y_elements=4, z_elements=4, skeleton_geometry=TetraSkeleton(arrangement='moderate'))
OOF.Mesh.New(name='mesh', skeleton='microstructure:skeleton', element_types=['TET4_4', 'D2_2', 'T3_3', 'Q4_4'])
OOF.Subproblem.Field.Define(subproblem='microstructure:skeleton:mesh:default', field=Temperature)
OOF.Subproblem.Field.Define(subproblem='microstructure:skeleton:mesh:default', field=Displacement)
OOF.Subproblem.Field.Activate(subproblem='microstructure:skeleton:mesh:default', field=Displacement)
OOF.Subproblem.Field.Activate(subproblem='microstructure:skeleton:mesh:default', field=Temperature)
OOF.Subproblem.Equation.Activate(subproblem='microstructure:skeleton:mesh:default', equation=Heat_Eqn)
OOF.Subproblem.Equation.Activate(subproblem='microstructure:skeleton:mesh:default', equation=Force_Balance)
OOF.Mesh.Boundary_Conditions.New(name='bc', mesh='microstructure:skeleton:mesh', condition=DirichletBC(field=Displacement,field_component='x',equation=Force_Balance,eqn_component='x',profile=ConstantProfile(value=0.0),boundary='Xmin'))
OOF.Mesh.Boundary_Conditions.New(name='bc<2>', mesh='microstructure:skeleton:mesh', condition=DirichletBC(field=Displacement,field_component='y',equation=Force_Balance,eqn_component='y',profile=ConstantProfile(value=0.0),boundary='XminYminZmin'))
OOF.Mesh.Boundary_Conditions.New(name='bc<3>', mesh='microstructure:skeleton:mesh', condition=DirichletBC(field=Displacement,field_component='z',equation=Force_Balance,eqn_component='z',profile=ConstantProfile(value=0.0),boundary='XminYminZmin'))
OOF.Mesh.Boundary_Conditions.New(name='bc<4>', mesh='microstructure:skeleton:mesh', condition=DirichletBC(field=Displacement,field_component='x',equation=Force_Balance,eqn_component='x',profile=ConstantProfile(value=0.1),boundary='Xmax'))
OOF.Mesh.Boundary_Conditions.New(name='bc<5>', mesh='microstructure:skeleton:mesh', condition=DirichletBC(field=Temperature,field_component='',equation=Heat_Eqn,eqn_component='',profile=ConstantProfile(value=0),boundary='Ymin'))
OOF.Mesh.Boundary_Conditions.New(name='bc<6>', mesh='microstructure:skeleton:mesh', condition=DirichletBC(field=Temperature,field_component='',equation=Heat_Eqn,eqn_component='',profile=ConstantProfile(value=1),boundary='Ymax'))
OOF.Mesh.Set_Field_Initializer(mesh='microstructure:skeleton:mesh', field=Temperature, initializer=FuncScalarFieldInit(function='y'))
OOF.Mesh.Set_Field_Initializer(mesh='microstructure:skeleton:mesh', field=Displacement, initializer=FuncThreeVectorFieldInit(fx='0.1*x',fy='0.0',fz='0.0'))
OOF.Mesh.Apply_Field_Initializers_at_Time(mesh='microstructure:skeleton:mesh', time=0.0)
OOF.Subproblem.Set_Solver(subproblem='microstructure:skeleton:mesh:default', solver_mode=BasicSolverMode(time_stepper=BasicUniformDriver(stepsize=0.1),matrix_method=BasicIterative(tolerance=1e-13,max_iterations=1000)))

