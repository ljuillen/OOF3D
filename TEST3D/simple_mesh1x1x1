# OOF version 2.0
FileVersion(number=1.0, format='ascii')
Microstructure.New(name='microstructure', size=Point(1,1,1), isize=iPoint(10,10,10))
Microstructure.Categories(microstructure='microstructure', categories=[[[0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]], [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]])
Property.Mechanical.Elasticity.Isotropic(name='', cijkl=IsotropicRank4TensorCij(c11=1.0,c12=0.5))
MaterialandType(name='material', properties=['Mechanical:Elasticity:Isotropic'], materialtype='bulk')
Microstructure.DefineCategory.Material(microstructure='microstructure', category=0, material='material')
Microstructure.EndCategories(microstructure='microstructure')
Skeleton.NewPeriodic(name='1x1x1', microstructure='microstructure', x_periodicity=0, y_periodicity=0, z_periodicity=0)
Skeleton.Nodes(skeleton='microstructure:1x1x1', points=[(0.0, 0.0, 0.0), (0.0, 0.0, 1.0), (1.0, 0.0, 0.0), (1.0, 0.0, 1.0), (0.0, 1.0, 0.0), (0.0, 1.0, 1.0), (1.0, 1.0, 0.0), (1.0, 1.0, 1.0)])
Skeleton.Elements(skeleton='microstructure:1x1x1', nodes=[(1, 7, 3, 2), (1, 5, 7, 4), (2, 7, 6, 4), (1, 2, 0, 4), (1, 4, 7, 2)])
Skeleton.PinnedNodes(skeleton='microstructure:1x1x1', nodes=[])
Skeleton.PointBoundary(skeleton='microstructure:1x1x1', name='XmaxYmaxZmax', nodes=[7], exterior=1)
Skeleton.PointBoundary(skeleton='microstructure:1x1x1', name='XmaxYmaxZmin', nodes=[6], exterior=1)
Skeleton.PointBoundary(skeleton='microstructure:1x1x1', name='XmaxYminZmax', nodes=[3], exterior=1)
Skeleton.PointBoundary(skeleton='microstructure:1x1x1', name='XmaxYminZmin', nodes=[2], exterior=1)
Skeleton.PointBoundary(skeleton='microstructure:1x1x1', name='XminYmaxZmax', nodes=[5], exterior=1)
Skeleton.PointBoundary(skeleton='microstructure:1x1x1', name='XminYmaxZmin', nodes=[4], exterior=1)
Skeleton.PointBoundary(skeleton='microstructure:1x1x1', name='XminYminZmax', nodes=[1], exterior=1)
Skeleton.PointBoundary(skeleton='microstructure:1x1x1', name='XminYminZmin', nodes=[0], exterior=1)
Skeleton.EdgeBoundary(skeleton='microstructure:1x1x1', name='XmaxYmax', edges=[(6, 7)], exterior=1)
Skeleton.EdgeBoundary(skeleton='microstructure:1x1x1', name='XmaxYmin', edges=[(2, 3)], exterior=1)
Skeleton.EdgeBoundary(skeleton='microstructure:1x1x1', name='XmaxZmax', edges=[(3, 7)], exterior=1)
Skeleton.EdgeBoundary(skeleton='microstructure:1x1x1', name='XmaxZmin', edges=[(2, 6)], exterior=1)
Skeleton.EdgeBoundary(skeleton='microstructure:1x1x1', name='XminYmax', edges=[(4, 5)], exterior=1)
Skeleton.EdgeBoundary(skeleton='microstructure:1x1x1', name='XminYmin', edges=[(0, 1)], exterior=1)
Skeleton.EdgeBoundary(skeleton='microstructure:1x1x1', name='XminZmax', edges=[(1, 5)], exterior=1)
Skeleton.EdgeBoundary(skeleton='microstructure:1x1x1', name='XminZmin', edges=[(0, 4)], exterior=1)
Skeleton.EdgeBoundary(skeleton='microstructure:1x1x1', name='YmaxZmax', edges=[(5, 7)], exterior=1)
Skeleton.EdgeBoundary(skeleton='microstructure:1x1x1', name='YmaxZmin', edges=[(4, 6)], exterior=1)
Skeleton.EdgeBoundary(skeleton='microstructure:1x1x1', name='YminZmax', edges=[(1, 3)], exterior=1)
Skeleton.EdgeBoundary(skeleton='microstructure:1x1x1', name='YminZmin', edges=[(0, 2)], exterior=1)
Skeleton.FaceBoundary(skeleton='microstructure:1x1x1', name='Xmax', faces=[(2, 6, 7), (7, 3, 2)], exterior=1)
Skeleton.FaceBoundary(skeleton='microstructure:1x1x1', name='Xmin', faces=[(0, 1, 4), (5, 4, 1)], exterior=1)
Skeleton.FaceBoundary(skeleton='microstructure:1x1x1', name='Ymax', faces=[(4, 5, 7), (7, 6, 4)], exterior=1)
Skeleton.FaceBoundary(skeleton='microstructure:1x1x1', name='Ymin', faces=[(1, 2, 3), (2, 1, 0)], exterior=1)
Skeleton.FaceBoundary(skeleton='microstructure:1x1x1', name='Zmax', faces=[(1, 3, 7), (7, 5, 1)], exterior=1)
Skeleton.FaceBoundary(skeleton='microstructure:1x1x1', name='Zmin', faces=[(2, 4, 6), (4, 2, 0)], exterior=1)
Skeleton.ElementSelection(skeleton='microstructure:1x1x1', elements=[])
Skeleton.FaceSelection(skeleton='microstructure:1x1x1', faces=[])
Skeleton.SegmentSelection(skeleton='microstructure:1x1x1', segments=[])
Skeleton.NodeSelection(skeleton='microstructure:1x1x1', nodes=[])
Mesh.New(name='mesh', masterelems=['D2_2', 'TET4_4', 'T3_3', 'Q4_4'], skeleton='microstructure:1x1x1')
Subproblem.Fields(subproblem='microstructure:1x1x1:mesh:default', defined=['Displacement'], active=['Displacement'], inplane=[])
Subproblem.Equations(subproblem='microstructure:1x1x1:mesh:default', equations=['Force_Balance'])
Subproblem.Solver(subproblem='microstructure:1x1x1:mesh:default', solver_mode=BasicSolverMode(time_stepper=BasicStaticDriver(),matrix_method=BasicIterative(tolerance=1e-13,max_iterations=1000)))
Mesh.Boundary_Condition(mesh='microstructure:1x1x1:mesh', bcname='bc', bc=NeumannBC(flux=Stress,profile=[ConstantProfile(value=0.1), ConstantProfile(value=0.0), ConstantProfile(value=0.0)],boundary='Xmax'))
Mesh.Boundary_Condition(mesh='microstructure:1x1x1:mesh', bcname='bc<2>', bc=DirichletBC(field=Displacement,field_component='x',equation=Force_Balance,eqn_component='x',profile=ConstantProfile(value=0.0),boundary='Xmin'))
Mesh.Boundary_Condition(mesh='microstructure:1x1x1:mesh', bcname='bc<3>', bc=DirichletBC(field=Displacement,field_component='y',equation=Force_Balance,eqn_component='y',profile=ConstantProfile(value=0.0),boundary='Ymax'))
Mesh.Boundary_Condition(mesh='microstructure:1x1x1:mesh', bcname='bc<4>', bc=DirichletBC(field=Displacement,field_component='y',equation=Force_Balance,eqn_component='y',profile=ConstantProfile(value=0.0),boundary='Ymin'))
Mesh.Boundary_Condition(mesh='microstructure:1x1x1:mesh', bcname='bc<5>', bc=DirichletBC(field=Displacement,field_component='z',equation=Force_Balance,eqn_component='z',profile=ConstantProfile(value=0.0),boundary='Zmax'))
Mesh.Boundary_Condition(mesh='microstructure:1x1x1:mesh', bcname='bc<6>', bc=DirichletBC(field=Displacement,field_component='z',equation=Force_Balance,eqn_component='z',profile=ConstantProfile(value=0.0),boundary='Zmin'))
Mesh.Load_Field(mesh='microstructure:1x1x1:mesh', fields=['Displacement'], field_values=[(0, 0.0, 0.0, 0.0), (1, 0.0, 0.0, 0.0), (2, 0.0, 0.0, 0.0), (3, 0.0, 0.0, 0.0), (4, 0.0, 0.0, 0.0), (5, 0.0, 0.0, 0.0), (6, 0.0, 0.0, 0.0), (7, 0.0, 0.0, 0.0)])
Mesh.Time(mesh='microstructure:1x1x1:mesh', time=0.0)
Mesh.Status(mesh='microstructure:1x1x1:mesh', status=Unsolved(details='Newly loaded.'))
